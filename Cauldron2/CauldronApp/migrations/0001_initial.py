# Generated by Django 2.1.14 on 2019-11-14 13:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('started', models.DateTimeField()),
                ('completed', models.DateTimeField()),
                ('retries', models.IntegerField()),
                ('status', models.CharField(max_length=255)),
                ('log_file', models.CharField(blank=True, max_length=255)),
                ('old', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ESUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('index', models.CharField(blank=True, default='', max_length=255)),
                ('dashboard', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Dashboard')),
            ],
        ),
        migrations.CreateModel(
            name='GithubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('photo', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='GitlabUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('photo', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MeetupUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('refresh_token', models.CharField(max_length=100)),
                ('photo', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('backend', models.CharField(max_length=100)),
                ('dashboards', models.ManyToManyField(to='CauldronApp.Dashboard')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_id', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('started', models.DateTimeField(null=True)),
                ('retries', models.IntegerField(default=0)),
                ('log_file', models.CharField(blank=True, max_length=255)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Repository')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backend', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=200)),
                ('rate_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='tokens',
            field=models.ManyToManyField(to='CauldronApp.Token'),
        ),
        migrations.AddField(
            model_name='meetupuser',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Token'),
        ),
        migrations.AddField(
            model_name='meetupuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gitlabuser',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Token'),
        ),
        migrations.AddField(
            model_name='gitlabuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='githubuser',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Token'),
        ),
        migrations.AddField(
            model_name='githubuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='completedtask',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CauldronApp.Repository'),
        ),
    ]

